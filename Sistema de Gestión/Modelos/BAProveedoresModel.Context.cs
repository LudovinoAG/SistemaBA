//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_de_Gestión.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAProveedoresEntities : DbContext
    {
        public BAProveedoresEntities()
            : base("name=BAProveedoresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VW_ListaProveedores> VW_ListaProveedores { get; set; }
    
        public virtual int SP_ActualizarProveedor(Nullable<int> idProveedor, string nom_Proveedor, string rnc_Proveedor, string contacto_Proveedor, Nullable<int> comision_Definida, string des_Proveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nom_ProveedorParameter = nom_Proveedor != null ?
                new ObjectParameter("Nom_Proveedor", nom_Proveedor) :
                new ObjectParameter("Nom_Proveedor", typeof(string));
    
            var rnc_ProveedorParameter = rnc_Proveedor != null ?
                new ObjectParameter("Rnc_Proveedor", rnc_Proveedor) :
                new ObjectParameter("Rnc_Proveedor", typeof(string));
    
            var contacto_ProveedorParameter = contacto_Proveedor != null ?
                new ObjectParameter("Contacto_Proveedor", contacto_Proveedor) :
                new ObjectParameter("Contacto_Proveedor", typeof(string));
    
            var comision_DefinidaParameter = comision_Definida.HasValue ?
                new ObjectParameter("Comision_Definida", comision_Definida) :
                new ObjectParameter("Comision_Definida", typeof(int));
    
            var des_ProveedorParameter = des_Proveedor != null ?
                new ObjectParameter("Des_Proveedor", des_Proveedor) :
                new ObjectParameter("Des_Proveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarProveedor", idProveedorParameter, nom_ProveedorParameter, rnc_ProveedorParameter, contacto_ProveedorParameter, comision_DefinidaParameter, des_ProveedorParameter);
        }
    
        public virtual int SP_EliminarProveedor(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarProveedor", idProveedorParameter);
        }
    
        public virtual int SP_InsertarProveedor(string nom_Proveedor, string rnc_Proveedor, string contacto_Proveedor, Nullable<int> comision_Definida, string des_Proveedor)
        {
            var nom_ProveedorParameter = nom_Proveedor != null ?
                new ObjectParameter("Nom_Proveedor", nom_Proveedor) :
                new ObjectParameter("Nom_Proveedor", typeof(string));
    
            var rnc_ProveedorParameter = rnc_Proveedor != null ?
                new ObjectParameter("Rnc_Proveedor", rnc_Proveedor) :
                new ObjectParameter("Rnc_Proveedor", typeof(string));
    
            var contacto_ProveedorParameter = contacto_Proveedor != null ?
                new ObjectParameter("Contacto_Proveedor", contacto_Proveedor) :
                new ObjectParameter("Contacto_Proveedor", typeof(string));
    
            var comision_DefinidaParameter = comision_Definida.HasValue ?
                new ObjectParameter("Comision_Definida", comision_Definida) :
                new ObjectParameter("Comision_Definida", typeof(int));
    
            var des_ProveedorParameter = des_Proveedor != null ?
                new ObjectParameter("Des_Proveedor", des_Proveedor) :
                new ObjectParameter("Des_Proveedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarProveedor", nom_ProveedorParameter, rnc_ProveedorParameter, contacto_ProveedorParameter, comision_DefinidaParameter, des_ProveedorParameter);
        }
    }
}
