//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_de_Gestión.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAVehiculosEntities : DbContext
    {
        public BAVehiculosEntities()
            : base("name=BAVehiculosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VW_VerListaVehiculos> VW_VerListaVehiculos { get; set; }
        public virtual DbSet<VW_ListaEstatusVehiculos> VW_ListaEstatusVehiculos { get; set; }
        public virtual DbSet<VW_ListaSeguroVehicular> VW_ListaSeguroVehicular { get; set; }
    
        public virtual int SP_ActualizarVehiculos(Nullable<int> id_Vehiculos, string marca, string modelo, string des_Vehiculo, string matricula, Nullable<int> idSeguroVehicular, Nullable<System.DateTime> fechaEmisionSeguro, Nullable<System.DateTime> fechaVencimientoSeguro, Nullable<int> idEstatus, Nullable<int> capacidad)
        {
            var id_VehiculosParameter = id_Vehiculos.HasValue ?
                new ObjectParameter("id_Vehiculos", id_Vehiculos) :
                new ObjectParameter("id_Vehiculos", typeof(int));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var des_VehiculoParameter = des_Vehiculo != null ?
                new ObjectParameter("Des_Vehiculo", des_Vehiculo) :
                new ObjectParameter("Des_Vehiculo", typeof(string));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            var idSeguroVehicularParameter = idSeguroVehicular.HasValue ?
                new ObjectParameter("idSeguroVehicular", idSeguroVehicular) :
                new ObjectParameter("idSeguroVehicular", typeof(int));
    
            var fechaEmisionSeguroParameter = fechaEmisionSeguro.HasValue ?
                new ObjectParameter("FechaEmisionSeguro", fechaEmisionSeguro) :
                new ObjectParameter("FechaEmisionSeguro", typeof(System.DateTime));
    
            var fechaVencimientoSeguroParameter = fechaVencimientoSeguro.HasValue ?
                new ObjectParameter("FechaVencimientoSeguro", fechaVencimientoSeguro) :
                new ObjectParameter("FechaVencimientoSeguro", typeof(System.DateTime));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarVehiculos", id_VehiculosParameter, marcaParameter, modeloParameter, des_VehiculoParameter, matriculaParameter, idSeguroVehicularParameter, fechaEmisionSeguroParameter, fechaVencimientoSeguroParameter, idEstatusParameter, capacidadParameter);
        }
    
        public virtual int SP_EliminarVehiculo(Nullable<int> id_Vehiculos)
        {
            var id_VehiculosParameter = id_Vehiculos.HasValue ?
                new ObjectParameter("id_Vehiculos", id_Vehiculos) :
                new ObjectParameter("id_Vehiculos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarVehiculo", id_VehiculosParameter);
        }
    
        public virtual int SP_InsertarVehiculos(string marca, string modelo, string des_Vehiculo, string matricula, Nullable<int> idSeguroVehicular, Nullable<System.DateTime> fechaEmisionSeguro, Nullable<System.DateTime> fechaVencimientoSeguro, Nullable<int> idEstatus, Nullable<int> capacidad)
        {
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var des_VehiculoParameter = des_Vehiculo != null ?
                new ObjectParameter("Des_Vehiculo", des_Vehiculo) :
                new ObjectParameter("Des_Vehiculo", typeof(string));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            var idSeguroVehicularParameter = idSeguroVehicular.HasValue ?
                new ObjectParameter("idSeguroVehicular", idSeguroVehicular) :
                new ObjectParameter("idSeguroVehicular", typeof(int));
    
            var fechaEmisionSeguroParameter = fechaEmisionSeguro.HasValue ?
                new ObjectParameter("FechaEmisionSeguro", fechaEmisionSeguro) :
                new ObjectParameter("FechaEmisionSeguro", typeof(System.DateTime));
    
            var fechaVencimientoSeguroParameter = fechaVencimientoSeguro.HasValue ?
                new ObjectParameter("FechaVencimientoSeguro", fechaVencimientoSeguro) :
                new ObjectParameter("FechaVencimientoSeguro", typeof(System.DateTime));
    
            var idEstatusParameter = idEstatus.HasValue ?
                new ObjectParameter("idEstatus", idEstatus) :
                new ObjectParameter("idEstatus", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarVehiculos", marcaParameter, modeloParameter, des_VehiculoParameter, matriculaParameter, idSeguroVehicularParameter, fechaEmisionSeguroParameter, fechaVencimientoSeguroParameter, idEstatusParameter, capacidadParameter);
        }
    }
}
