//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_de_Gestión.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAProductosEntities : DbContext
    {
        public BAProductosEntities()
            : base("name=BAProductosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VW_ListaGeneralProductos> VW_ListaGeneralProductos { get; set; }
        public virtual DbSet<VW_ListaEstatusProductos> VW_ListaEstatusProductos { get; set; }
    
        public virtual int SP_ActualizarProducto(Nullable<int> id_Producto, Nullable<int> id_Categoria, Nullable<int> id_Proveedor, string nom_Producto, string des_Producto, Nullable<decimal> precio, Nullable<int> idEst_Producto)
        {
            var id_ProductoParameter = id_Producto.HasValue ?
                new ObjectParameter("id_Producto", id_Producto) :
                new ObjectParameter("id_Producto", typeof(int));
    
            var id_CategoriaParameter = id_Categoria.HasValue ?
                new ObjectParameter("id_Categoria", id_Categoria) :
                new ObjectParameter("id_Categoria", typeof(int));
    
            var id_ProveedorParameter = id_Proveedor.HasValue ?
                new ObjectParameter("id_Proveedor", id_Proveedor) :
                new ObjectParameter("id_Proveedor", typeof(int));
    
            var nom_ProductoParameter = nom_Producto != null ?
                new ObjectParameter("Nom_Producto", nom_Producto) :
                new ObjectParameter("Nom_Producto", typeof(string));
    
            var des_ProductoParameter = des_Producto != null ?
                new ObjectParameter("Des_Producto", des_Producto) :
                new ObjectParameter("Des_Producto", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idEst_ProductoParameter = idEst_Producto.HasValue ?
                new ObjectParameter("idEst_Producto", idEst_Producto) :
                new ObjectParameter("idEst_Producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarProducto", id_ProductoParameter, id_CategoriaParameter, id_ProveedorParameter, nom_ProductoParameter, des_ProductoParameter, precioParameter, idEst_ProductoParameter);
        }
    
        public virtual int SP_InsertarProductos(Nullable<int> idCategoria, Nullable<int> idProveedor, string nomProducto, string desProducto, Nullable<decimal> precio, Nullable<int> idEstatusProducto)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nomProductoParameter = nomProducto != null ?
                new ObjectParameter("NomProducto", nomProducto) :
                new ObjectParameter("NomProducto", typeof(string));
    
            var desProductoParameter = desProducto != null ?
                new ObjectParameter("DesProducto", desProducto) :
                new ObjectParameter("DesProducto", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var idEstatusProductoParameter = idEstatusProducto.HasValue ?
                new ObjectParameter("idEstatusProducto", idEstatusProducto) :
                new ObjectParameter("idEstatusProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarProductos", idCategoriaParameter, idProveedorParameter, nomProductoParameter, desProductoParameter, precioParameter, idEstatusProductoParameter);
        }
    
        public virtual int SP_EliminarProducto(Nullable<int> id_Producto)
        {
            var id_ProductoParameter = id_Producto.HasValue ?
                new ObjectParameter("id_Producto", id_Producto) :
                new ObjectParameter("id_Producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarProducto", id_ProductoParameter);
        }
    }
}
