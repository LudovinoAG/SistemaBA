//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_de_Gestión.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BAEmpleadosEntities : DbContext
    {
        public BAEmpleadosEntities()
            : base("name=BAEmpleadosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VW_ListaCategoriaLicencia> VW_ListaCategoriaLicencia { get; set; }
        public virtual DbSet<VW_ListaDepartamentos> VW_ListaDepartamentos { get; set; }
        public virtual DbSet<VW_ListaEstatusEmpleados> VW_ListaEstatusEmpleados { get; set; }
        public virtual DbSet<VW_ListaGeneros> VW_ListaGeneros { get; set; }
        public virtual DbSet<VW_ListaPuestos> VW_ListaPuestos { get; set; }
        public virtual DbSet<VW_ListaSeguroMedico> VW_ListaSeguroMedico { get; set; }
        public virtual DbSet<VW_ListaSeguroVehicular> VW_ListaSeguroVehicular { get; set; }
        public virtual DbSet<VW_ListaSueldos> VW_ListaSueldos { get; set; }
        public virtual DbSet<VW_ListaSupervisores> VW_ListaSupervisores { get; set; }
        public virtual DbSet<VW_ListaTipoSangre> VW_ListaTipoSangre { get; set; }
        public virtual DbSet<VW_ListarEmpleados> VW_ListarEmpleados { get; set; }
    
        public virtual int SP_InsertarEmpleados(string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, string cedula, string telefonoEmpleado, string telefonoSecundarioEmpleado, Nullable<System.DateTime> fechaNacimiento, string correo, string calle, Nullable<int> numero, Nullable<int> casa, string sector, Nullable<int> idCiudad, string nombreContactoEmergencia, string telefonoContactoEmergencia, Nullable<int> idGenero, Nullable<int> idTipoSangre, Nullable<int> idPuesto, Nullable<int> idDepartamento, Nullable<int> idSueldo, Nullable<int> idSupervisor, Nullable<int> idEstatusEmpleado, string motivoEstatus, Nullable<int> idSeguroMedico, string condicionMedica, Nullable<int> idCategoriaLicencia, Nullable<System.DateTime> fechaEmisionLicencia, Nullable<System.DateTime> fechaExpiracionLicencia, Nullable<int> idSeguroVehicular, Nullable<System.DateTime> fechaExpiracionSeguroVehiculo, string observacionEmpleado, byte[] fotoEmpleado)
        {
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var telefonoEmpleadoParameter = telefonoEmpleado != null ?
                new ObjectParameter("TelefonoEmpleado", telefonoEmpleado) :
                new ObjectParameter("TelefonoEmpleado", typeof(string));
    
            var telefonoSecundarioEmpleadoParameter = telefonoSecundarioEmpleado != null ?
                new ObjectParameter("TelefonoSecundarioEmpleado", telefonoSecundarioEmpleado) :
                new ObjectParameter("TelefonoSecundarioEmpleado", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var casaParameter = casa.HasValue ?
                new ObjectParameter("Casa", casa) :
                new ObjectParameter("Casa", typeof(int));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var idCiudadParameter = idCiudad.HasValue ?
                new ObjectParameter("idCiudad", idCiudad) :
                new ObjectParameter("idCiudad", typeof(int));
    
            var nombreContactoEmergenciaParameter = nombreContactoEmergencia != null ?
                new ObjectParameter("NombreContactoEmergencia", nombreContactoEmergencia) :
                new ObjectParameter("NombreContactoEmergencia", typeof(string));
    
            var telefonoContactoEmergenciaParameter = telefonoContactoEmergencia != null ?
                new ObjectParameter("TelefonoContactoEmergencia", telefonoContactoEmergencia) :
                new ObjectParameter("TelefonoContactoEmergencia", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("idGenero", idGenero) :
                new ObjectParameter("idGenero", typeof(int));
    
            var idTipoSangreParameter = idTipoSangre.HasValue ?
                new ObjectParameter("idTipoSangre", idTipoSangre) :
                new ObjectParameter("idTipoSangre", typeof(int));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("idPuesto", idPuesto) :
                new ObjectParameter("idPuesto", typeof(int));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("idDepartamento", idDepartamento) :
                new ObjectParameter("idDepartamento", typeof(int));
    
            var idSueldoParameter = idSueldo.HasValue ?
                new ObjectParameter("idSueldo", idSueldo) :
                new ObjectParameter("idSueldo", typeof(int));
    
            var idSupervisorParameter = idSupervisor.HasValue ?
                new ObjectParameter("idSupervisor", idSupervisor) :
                new ObjectParameter("idSupervisor", typeof(int));
    
            var idEstatusEmpleadoParameter = idEstatusEmpleado.HasValue ?
                new ObjectParameter("idEstatusEmpleado", idEstatusEmpleado) :
                new ObjectParameter("idEstatusEmpleado", typeof(int));
    
            var motivoEstatusParameter = motivoEstatus != null ?
                new ObjectParameter("MotivoEstatus", motivoEstatus) :
                new ObjectParameter("MotivoEstatus", typeof(string));
    
            var idSeguroMedicoParameter = idSeguroMedico.HasValue ?
                new ObjectParameter("idSeguroMedico", idSeguroMedico) :
                new ObjectParameter("idSeguroMedico", typeof(int));
    
            var condicionMedicaParameter = condicionMedica != null ?
                new ObjectParameter("CondicionMedica", condicionMedica) :
                new ObjectParameter("CondicionMedica", typeof(string));
    
            var idCategoriaLicenciaParameter = idCategoriaLicencia.HasValue ?
                new ObjectParameter("idCategoriaLicencia", idCategoriaLicencia) :
                new ObjectParameter("idCategoriaLicencia", typeof(int));
    
            var fechaEmisionLicenciaParameter = fechaEmisionLicencia.HasValue ?
                new ObjectParameter("FechaEmisionLicencia", fechaEmisionLicencia) :
                new ObjectParameter("FechaEmisionLicencia", typeof(System.DateTime));
    
            var fechaExpiracionLicenciaParameter = fechaExpiracionLicencia.HasValue ?
                new ObjectParameter("FechaExpiracionLicencia", fechaExpiracionLicencia) :
                new ObjectParameter("FechaExpiracionLicencia", typeof(System.DateTime));
    
            var idSeguroVehicularParameter = idSeguroVehicular.HasValue ?
                new ObjectParameter("idSeguroVehicular", idSeguroVehicular) :
                new ObjectParameter("idSeguroVehicular", typeof(int));
    
            var fechaExpiracionSeguroVehiculoParameter = fechaExpiracionSeguroVehiculo.HasValue ?
                new ObjectParameter("FechaExpiracionSeguroVehiculo", fechaExpiracionSeguroVehiculo) :
                new ObjectParameter("FechaExpiracionSeguroVehiculo", typeof(System.DateTime));
    
            var observacionEmpleadoParameter = observacionEmpleado != null ?
                new ObjectParameter("ObservacionEmpleado", observacionEmpleado) :
                new ObjectParameter("ObservacionEmpleado", typeof(string));
    
            var fotoEmpleadoParameter = fotoEmpleado != null ?
                new ObjectParameter("FotoEmpleado", fotoEmpleado) :
                new ObjectParameter("FotoEmpleado", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertarEmpleados", primerNombreParameter, segundoNombreParameter, primerApellidoParameter, segundoApellidoParameter, cedulaParameter, telefonoEmpleadoParameter, telefonoSecundarioEmpleadoParameter, fechaNacimientoParameter, correoParameter, calleParameter, numeroParameter, casaParameter, sectorParameter, idCiudadParameter, nombreContactoEmergenciaParameter, telefonoContactoEmergenciaParameter, idGeneroParameter, idTipoSangreParameter, idPuestoParameter, idDepartamentoParameter, idSueldoParameter, idSupervisorParameter, idEstatusEmpleadoParameter, motivoEstatusParameter, idSeguroMedicoParameter, condicionMedicaParameter, idCategoriaLicenciaParameter, fechaEmisionLicenciaParameter, fechaExpiracionLicenciaParameter, idSeguroVehicularParameter, fechaExpiracionSeguroVehiculoParameter, observacionEmpleadoParameter, fotoEmpleadoParameter);
        }
    
        public virtual int SP_ActualizarEmpleados(Nullable<int> idEmpleados, Nullable<int> idDetallesEmpleado, string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, string cedula, string telefonoEmpleado, string telefonoSecundarioEmpleado, Nullable<System.DateTime> fechaNacimiento, string correo, string calle, Nullable<int> numero, Nullable<int> casa, string sector, Nullable<int> idCiudad, string nombreContactoEmergencia, string telefonoContactoEmergencia, Nullable<int> idGenero, Nullable<int> idTipoSangre, Nullable<int> idPuesto, Nullable<int> idDepartamento, Nullable<int> idSueldo, Nullable<int> idSupervisor, Nullable<int> idEstatusEmpleado, string motivoEstatus, Nullable<int> idSeguroMedico, string condicionMedica, Nullable<int> idCategoriaLicencia, Nullable<System.DateTime> fechaEmisionLicencia, Nullable<System.DateTime> fechaExpiracionLicencia, Nullable<int> idSeguroVehicular, Nullable<System.DateTime> fechaExpiracionSeguroVehiculo, string observacionEmpleado, byte[] fotoEmpleado)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("idEmpleados", idEmpleados) :
                new ObjectParameter("idEmpleados", typeof(int));
    
            var idDetallesEmpleadoParameter = idDetallesEmpleado.HasValue ?
                new ObjectParameter("idDetallesEmpleado", idDetallesEmpleado) :
                new ObjectParameter("idDetallesEmpleado", typeof(int));
    
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var telefonoEmpleadoParameter = telefonoEmpleado != null ?
                new ObjectParameter("TelefonoEmpleado", telefonoEmpleado) :
                new ObjectParameter("TelefonoEmpleado", typeof(string));
    
            var telefonoSecundarioEmpleadoParameter = telefonoSecundarioEmpleado != null ?
                new ObjectParameter("TelefonoSecundarioEmpleado", telefonoSecundarioEmpleado) :
                new ObjectParameter("TelefonoSecundarioEmpleado", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var casaParameter = casa.HasValue ?
                new ObjectParameter("Casa", casa) :
                new ObjectParameter("Casa", typeof(int));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var idCiudadParameter = idCiudad.HasValue ?
                new ObjectParameter("idCiudad", idCiudad) :
                new ObjectParameter("idCiudad", typeof(int));
    
            var nombreContactoEmergenciaParameter = nombreContactoEmergencia != null ?
                new ObjectParameter("NombreContactoEmergencia", nombreContactoEmergencia) :
                new ObjectParameter("NombreContactoEmergencia", typeof(string));
    
            var telefonoContactoEmergenciaParameter = telefonoContactoEmergencia != null ?
                new ObjectParameter("TelefonoContactoEmergencia", telefonoContactoEmergencia) :
                new ObjectParameter("TelefonoContactoEmergencia", typeof(string));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("idGenero", idGenero) :
                new ObjectParameter("idGenero", typeof(int));
    
            var idTipoSangreParameter = idTipoSangre.HasValue ?
                new ObjectParameter("idTipoSangre", idTipoSangre) :
                new ObjectParameter("idTipoSangre", typeof(int));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("idPuesto", idPuesto) :
                new ObjectParameter("idPuesto", typeof(int));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("idDepartamento", idDepartamento) :
                new ObjectParameter("idDepartamento", typeof(int));
    
            var idSueldoParameter = idSueldo.HasValue ?
                new ObjectParameter("idSueldo", idSueldo) :
                new ObjectParameter("idSueldo", typeof(int));
    
            var idSupervisorParameter = idSupervisor.HasValue ?
                new ObjectParameter("idSupervisor", idSupervisor) :
                new ObjectParameter("idSupervisor", typeof(int));
    
            var idEstatusEmpleadoParameter = idEstatusEmpleado.HasValue ?
                new ObjectParameter("idEstatusEmpleado", idEstatusEmpleado) :
                new ObjectParameter("idEstatusEmpleado", typeof(int));
    
            var motivoEstatusParameter = motivoEstatus != null ?
                new ObjectParameter("MotivoEstatus", motivoEstatus) :
                new ObjectParameter("MotivoEstatus", typeof(string));
    
            var idSeguroMedicoParameter = idSeguroMedico.HasValue ?
                new ObjectParameter("idSeguroMedico", idSeguroMedico) :
                new ObjectParameter("idSeguroMedico", typeof(int));
    
            var condicionMedicaParameter = condicionMedica != null ?
                new ObjectParameter("CondicionMedica", condicionMedica) :
                new ObjectParameter("CondicionMedica", typeof(string));
    
            var idCategoriaLicenciaParameter = idCategoriaLicencia.HasValue ?
                new ObjectParameter("idCategoriaLicencia", idCategoriaLicencia) :
                new ObjectParameter("idCategoriaLicencia", typeof(int));
    
            var fechaEmisionLicenciaParameter = fechaEmisionLicencia.HasValue ?
                new ObjectParameter("FechaEmisionLicencia", fechaEmisionLicencia) :
                new ObjectParameter("FechaEmisionLicencia", typeof(System.DateTime));
    
            var fechaExpiracionLicenciaParameter = fechaExpiracionLicencia.HasValue ?
                new ObjectParameter("FechaExpiracionLicencia", fechaExpiracionLicencia) :
                new ObjectParameter("FechaExpiracionLicencia", typeof(System.DateTime));
    
            var idSeguroVehicularParameter = idSeguroVehicular.HasValue ?
                new ObjectParameter("idSeguroVehicular", idSeguroVehicular) :
                new ObjectParameter("idSeguroVehicular", typeof(int));
    
            var fechaExpiracionSeguroVehiculoParameter = fechaExpiracionSeguroVehiculo.HasValue ?
                new ObjectParameter("FechaExpiracionSeguroVehiculo", fechaExpiracionSeguroVehiculo) :
                new ObjectParameter("FechaExpiracionSeguroVehiculo", typeof(System.DateTime));
    
            var observacionEmpleadoParameter = observacionEmpleado != null ?
                new ObjectParameter("ObservacionEmpleado", observacionEmpleado) :
                new ObjectParameter("ObservacionEmpleado", typeof(string));
    
            var fotoEmpleadoParameter = fotoEmpleado != null ?
                new ObjectParameter("FotoEmpleado", fotoEmpleado) :
                new ObjectParameter("FotoEmpleado", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarEmpleados", idEmpleadosParameter, idDetallesEmpleadoParameter, primerNombreParameter, segundoNombreParameter, primerApellidoParameter, segundoApellidoParameter, cedulaParameter, telefonoEmpleadoParameter, telefonoSecundarioEmpleadoParameter, fechaNacimientoParameter, correoParameter, calleParameter, numeroParameter, casaParameter, sectorParameter, idCiudadParameter, nombreContactoEmergenciaParameter, telefonoContactoEmergenciaParameter, idGeneroParameter, idTipoSangreParameter, idPuestoParameter, idDepartamentoParameter, idSueldoParameter, idSupervisorParameter, idEstatusEmpleadoParameter, motivoEstatusParameter, idSeguroMedicoParameter, condicionMedicaParameter, idCategoriaLicenciaParameter, fechaEmisionLicenciaParameter, fechaExpiracionLicenciaParameter, idSeguroVehicularParameter, fechaExpiracionSeguroVehiculoParameter, observacionEmpleadoParameter, fotoEmpleadoParameter);
        }
    
        public virtual int SP_EliminarEmpleado(Nullable<int> idEmpleados)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("idEmpleados", idEmpleados) :
                new ObjectParameter("idEmpleados", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarEmpleado", idEmpleadosParameter);
        }
    }
}
